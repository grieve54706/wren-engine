on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json
    outputs:
        release_created: ${{ steps.release.outputs.release_created }}
        tag_name: ${{ steps.release.outputs.tag_name }}
  release-wren-engine-image:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build
        run: |
          ./mvnw clean install -B -DskipTests -P exec-jar
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: |
          WREN_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
          cd ./docker
          cp ../wren-server/target/wren-server-${WREN_VERSION}-executable.jar ./
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/canner/wren-engine:${{ needs.release-please.outputs.tag_name }} \
            --tag ghcr.io/canner/wren-engine:latest \
            --push -f ./Dockerfile \
            --build-arg "WREN_VERSION=${WREN_VERSION}" .
  release-ibis-image:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/canner/wren-engine-ibis
          tags: |
            type=raw,value=${{ needs.release-please.outputs.tag_name }}
            type=raw,value=latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./ibis-server
          build-contexts: |
            wren-modeling-py=./wren-modeling-py
            wren-modeling-rs=./wren-modeling-rs
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
